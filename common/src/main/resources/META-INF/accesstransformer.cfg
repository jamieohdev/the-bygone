# registering container screens
public net.minecraft.client.gui.screens.MenuScreens register(Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V # register
public net.minecraft.client.gui.screens.MenuScreens$ScreenConstructor

# sensortypes
public net.minecraft.world.entity.ai.sensing.SensorType

# blockEntity types
public net.minecraft.world.level.block.entity.BlockEntityType$BlockEntitySupplier

#menus
public net.minecraft.world.inventory.MenuType$MenuSupplier
public net.minecraft.world.inventory.MenuType <init>(Lnet/minecraft/world/inventory/MenuType$MenuSupplier;Lnet/minecraft/world/flag/FeatureFlagSet;)V

#item properties
public net.minecraft.client.renderer.item.ItemProperties register(Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V # register

# entity renderers
public net.minecraft.client.renderer.entity.EntityRenderers register(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V # register
public net.minecraft.client.renderer.blockentity.BlockEntityRenderers register(Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V # register

# gamerules
public net.minecraft.world.level.GameRules$IntegerValue create(I)Lnet/minecraft/world/level/GameRules$Type;
public net.minecraft.world.level.GameRules$BooleanValue create(Z)Lnet/minecraft/world/level/GameRules$Type;
public net.minecraft.world.level.GameRules register(Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key;

public-f net.minecraft.world.item.AxeItem STRIPPABLES # STRIPPABLES

public net.minecraft.world.level.block.FungusBlock <init>(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.StairBlock <init>(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.RootsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.PinkPetalsBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>

public net.minecraft.world.level.block.BaseCoralFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.BaseCoralPlantBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.CoralFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.CoralPlantBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.TrapDoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.DoorBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.PressurePlateBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.ButtonBlock <init>(Lnet/minecraft/world/level/block/state/properties/BlockSetType;ILnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.HalfTransparentBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.CoralWallFanBlock <init>(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>
public net.minecraft.world.level.block.BaseCoralWallFanBlock <init>(Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)V # <init>

public net.minecraft.world.level.block.Blocks always(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z # always
public net.minecraft.world.level.block.Blocks always(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; # always

public net.minecraft.world.level.block.Blocks never(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; # never
public net.minecraft.world.level.block.Blocks never(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z # never

public net.minecraft.world.level.block.state.properties.BlockSetType register(Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; # register
public net.minecraft.world.level.block.state.properties.WoodType register(Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; # register

public net.minecraft.world.entity.npc.VillagerTrades$ItemsForEmeralds
public net.minecraft.world.entity.npc.VillagerTrades$TreasureMapForEmeralds

public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; # source

public net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration

public net.minecraft.world.entity.Mob targetSelector

public net.minecraft.world.entity.projectile.Projectile <init>(Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;)V

public net.minecraft.world.food.FoodProperties$PossibleEffect <init>(Lnet/minecraft/world/effect/MobEffectInstance;F)V
